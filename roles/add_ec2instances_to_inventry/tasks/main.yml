- name: get the ec2 instance details "{{ host1 }}"
  ec2_instance_facts:
      filters:
        "tag:Name": "{{ host1 }}"
        instance-state-name: running
  register: ec2_host1

- name:  get the ec2 instance details of "{{ host2 }}"
  ec2_instance_facts:
      filters:
        "tag:Name": "{{ host2 }}"
        instance-state-name: running
  register: ec2_host2


#- name: debug
#  debug:
#      msg: "{{ ec2_host1 }}"


- name: create hosts file
  copy:
    dest: hosts
    content: |
          [assignment]

          [webserver]

          [couchdb]

- name: Add the newly created EC2 instance(s) to webserver host group
  lineinfile:
    dest: "{{ hostpath }}"
    insertafter: webserver
    line: "instance1 ansible_host={{ item.public_dns_name }} {{hoststring}}"
    firstmatch: yes
  with_items: "{{ ec2_host1.instances }}"


- name: Add the newly created EC2 instance(s) to assignment host group
  lineinfile:
      dest: "{{ hostpath }}"
      insertafter: [assignment]
      line: "instance1 ansible_host={{ item.public_dns_name }} {{hoststring}}"
      firstmatch: yes
  with_items: "{{ ec2_host1.instances }}"


- name: Add the newly created EC2 instance(s) to couchdb host group
  lineinfile:
    dest: "{{ hostpath }}"
    insertafter: couchdb
    line: "instance2 ansible_host={{ item.public_dns_name }} {{hoststring}}"
    firstmatch: yes
  with_items: "{{ ec2_host2.instances }}"


- name: Add the newly created EC2 instance(s) to assignment host group
  lineinfile:
      dest: "{{ hostpath }}"
      insertafter: [assignment]
      line: "instance2 ansible_host={{ item.public_dns_name }} {{hoststring}}"
      firstmatch: yes
  with_items: "{{ ec2_host2.instances }}"
